# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'trabalho.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import cifras
from PyQt5 import QtCore, QtGui, QtWidgets

class handlers():

    def setupHandlers(obj):
        obj.pushButtonCript.clicked.connect(lambda: handlers.Cript(obj))
        obj.pushButtonDecript.clicked.connect(lambda: handlers.Decript(obj))
        obj.errorCloseButton.clicked.connect(lambda: obj.frame_popuperror.hide())
        obj.frame_popuperror.hide()

    def Cript(obj):
        selecionado = str(obj.comboBoxAlgoritmo.currentText())
        txtPadrao = obj.caixaTextoPadrao.toPlainText()
        txtKey = obj.caixaTextoChave.toPlainText()
        if selecionado == "Cesar":
            try:
                Ct = cifras.en_cesar(txtPadrao,txtKey)
                obj.caixaTextoCript.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "XOR":
            try:
                Ct = cifras.en_xor(txtPadrao,txtKey)
                obj.caixaTextoCript.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "S-DES":
            try:
                Ct = cifras.en_sDES(txtPadrao,txtKey)
                obj.caixaTextoCript.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "DES":
            try:
                Ct = cifras.en_DES(txtPadrao,txtKey)
                obj.caixaTextoCript.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "AES":
            try:
                Ct = cifras.en_AES(txtPadrao,txtKey)
                obj.caixaTextoCript.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()

    def Decript(obj):
        selecionado = str(obj.comboBoxAlgoritmo.currentText())
        txtCript = obj.caixaTextoCript.toPlainText()
        txtKey = obj.caixaTextoChave.toPlainText()
        if selecionado == 'Cesar':
            try:
                Ct = cifras.dec_cesar(txtCript,txtKey)
                obj.caixaTextoPadrao.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == 'XOR':
            try:
                Ct = cifras.dec_xor(txtCript,txtKey)
                obj.caixaTextoPadrao.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "S-DES":
            try:
                Ct = cifras.dec_sDES(txtCript,txtKey)
                obj.caixaTextoPadrao.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "DES":
            try:
                Ct = cifras.dec_DES(txtCript,txtKey)
                obj.caixaTextoPadrao.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
        elif selecionado == "AES":
            try:
                Ct = cifras.dec_AES(txtCript,txtKey)
                obj.caixaTextoPadrao.setPlainText(Ct)
            except:
                obj.frame_popuperror.show()
#handlers.setupHandlers(self)
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1036, 615)
        MainWindow.setMinimumSize(QtCore.QSize(1036, 615))
        MainWindow.setStyleSheet("background-color: rgb(53, 53, 53);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_txtboxes = QtWidgets.QFrame(self.centralwidget)
        self.frame_txtboxes.setMaximumSize(QtCore.QSize(771, 591))
        self.frame_txtboxes.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_txtboxes.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_txtboxes.setObjectName("frame_txtboxes")
        self.caixaTextoPadrao = QtWidgets.QPlainTextEdit(self.frame_txtboxes)
        self.caixaTextoPadrao.setGeometry(QtCore.QRect(15, 40, 751, 192))
        self.caixaTextoPadrao.setMinimumSize(QtCore.QSize(751, 92))
        self.caixaTextoPadrao.setStyleSheet("color: rgb(255, 255, 255);")
        self.caixaTextoPadrao.setObjectName("caixaTextoPadrao")
        self.labelTextoPadrao = QtWidgets.QLabel(self.frame_txtboxes)
        self.labelTextoPadrao.setGeometry(QtCore.QRect(15, 10, 161, 18))
        self.labelTextoPadrao.setMinimumSize(QtCore.QSize(161, 18))
        self.labelTextoPadrao.setMaximumSize(QtCore.QSize(161, 18))
        self.labelTextoPadrao.setStyleSheet("font: 75 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);")
        self.labelTextoPadrao.setObjectName("labelTextoPadrao")
        self.labelTextoCript = QtWidgets.QLabel(self.frame_txtboxes)
        self.labelTextoCript.setGeometry(QtCore.QRect(15, 250, 201, 18))
        self.labelTextoCript.setMinimumSize(QtCore.QSize(201, 18))
        self.labelTextoCript.setMaximumSize(QtCore.QSize(201, 18))
        self.labelTextoCript.setStyleSheet("font: 75 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);")
        self.labelTextoCript.setObjectName("labelTextoCript")
        self.caixaTextoCript = QtWidgets.QPlainTextEdit(self.frame_txtboxes)
        self.caixaTextoCript.setGeometry(QtCore.QRect(15, 280, 751, 192))
        self.caixaTextoCript.setMinimumSize(QtCore.QSize(751, 81))
        self.caixaTextoCript.setStyleSheet("color: rgb(255, 255, 255);")
        self.caixaTextoCript.setObjectName("caixaTextoCript")
        self.caixaTextoChave = QtWidgets.QPlainTextEdit(self.frame_txtboxes)
        self.caixaTextoChave.setGeometry(QtCore.QRect(16, 521, 291, 41))
        self.caixaTextoChave.setMinimumSize(QtCore.QSize(291, 31))
        self.caixaTextoChave.setMaximumSize(QtCore.QSize(16777215, 41))
        self.caixaTextoChave.setStyleSheet("color: rgb(255, 255, 255);")
        self.caixaTextoChave.setObjectName("caixaTextoChave")
        self.textoChave = QtWidgets.QLabel(self.frame_txtboxes)
        self.textoChave.setGeometry(QtCore.QRect(15, 490, 51, 18))
        self.textoChave.setMinimumSize(QtCore.QSize(51, 18))
        self.textoChave.setMaximumSize(QtCore.QSize(51, 18))
        self.textoChave.setStyleSheet("font: 75 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);")
        self.textoChave.setObjectName("textoChave")
        self.frame_popuperror = QtWidgets.QFrame(self.frame_txtboxes)
        self.frame_popuperror.setGeometry(QtCore.QRect(330, 520, 290, 41))
        self.frame_popuperror.setMinimumSize(QtCore.QSize(290, 41))
        self.frame_popuperror.setMaximumSize(QtCore.QSize(16777215, 41))
        self.frame_popuperror.setStyleSheet("background-color: rgb(217, 103, 105);")
        self.frame_popuperror.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_popuperror.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_popuperror.setObjectName("frame_popuperror")
        self.errorCloseButton = QtWidgets.QPushButton(self.frame_popuperror)
        self.errorCloseButton.setGeometry(QtCore.QRect(250, 10, 31, 26))
        self.errorCloseButton.setMinimumSize(QtCore.QSize(31, 26))
        self.errorCloseButton.setMaximumSize(QtCore.QSize(31, 23))
        self.errorCloseButton.setStyleSheet("QPushButton{\n"
"font: 75 8pt \"Verdana\";\n"
"}\n"
"QPushButton:pressed{\n"
"background-color: rgb(122, 69, 70);\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.errorCloseButton.setObjectName("errorCloseButton")
        self.label = QtWidgets.QLabel(self.frame_popuperror)
        self.label.setGeometry(QtCore.QRect(60, 14, 151, 16))
        self.label.setStyleSheet("font: 75 8pt \"Verdana\";")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.frame_txtboxes)
        self.frame_botoes = QtWidgets.QFrame(self.centralwidget)
        self.frame_botoes.setMaximumSize(QtCore.QSize(202, 268))
        self.frame_botoes.setStyleSheet("")
        self.frame_botoes.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_botoes.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_botoes.setObjectName("frame_botoes")
        self.pushButtonDecript = QtWidgets.QPushButton(self.frame_botoes)
        self.pushButtonDecript.setGeometry(QtCore.QRect(30, 124, 131, 26))
        self.pushButtonDecript.setMinimumSize(QtCore.QSize(131, 26))
        self.pushButtonDecript.setMaximumSize(QtCore.QSize(131, 26))
        self.pushButtonDecript.setStyleSheet("QPushButton{\n"
"background-color: rgb(27, 27, 27);\n"
"font: 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"QPushButton:pressed{\n"
"background-color: rgb(255,255,255);\n"
"color: rgb(27, 27, 27);\n"
"}\n"
"")
        self.pushButtonDecript.setObjectName("pushButtonDecript")
        self.pushButtonCript = QtWidgets.QPushButton(self.frame_botoes)
        self.pushButtonCript.setGeometry(QtCore.QRect(30, 160, 131, 26))
        self.pushButtonCript.setMinimumSize(QtCore.QSize(131, 26))
        self.pushButtonCript.setMaximumSize(QtCore.QSize(131, 26))
        self.pushButtonCript.setMouseTracking(False)
        self.pushButtonCript.setStyleSheet("QPushButton{\n"
"background-color: rgb(27, 27, 27);\n"
"font: 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"QPushButton:pressed{\n"
"background-color: rgb(255,255,255);\n"
"color: rgb(27, 27, 27);\n"
"}\n"
"")
        self.pushButtonCript.setObjectName("pushButtonCript")
        self.comboBoxAlgoritmo = QtWidgets.QComboBox(self.frame_botoes)
        self.comboBoxAlgoritmo.setGeometry(QtCore.QRect(30, 88, 151, 26))
        self.comboBoxAlgoritmo.setMinimumSize(QtCore.QSize(151, 26))
        self.comboBoxAlgoritmo.setMaximumSize(QtCore.QSize(151, 22))
        self.comboBoxAlgoritmo.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.comboBoxAlgoritmo.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.comboBoxAlgoritmo.setStyleSheet("background-color: rgb(27, 27, 27);\n"
"font: 12pt \"Verdana\";\n"
"color: rgb(255, 255, 255);")
        self.comboBoxAlgoritmo.setObjectName("comboBoxAlgoritmo")
        self.comboBoxAlgoritmo.addItem("")
        self.comboBoxAlgoritmo.addItem("")
        self.comboBoxAlgoritmo.addItem("")
        self.comboBoxAlgoritmo.addItem("")
        self.comboBoxAlgoritmo.addItem("")
        self.horizontalLayout.addWidget(self.frame_botoes)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        handlers.setupHandlers(self)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.labelTextoPadrao.setText(_translate("MainWindow", "Texto Padrão"))
        self.labelTextoCript.setText(_translate("MainWindow", "Texto Criptografado"))
        self.textoChave.setText(_translate("MainWindow", "Chave"))
        self.errorCloseButton.setText(_translate("MainWindow", "X"))
        self.label.setText(_translate("MainWindow", "ERROR! CHAVE INVÁLIDA"))
        self.pushButtonDecript.setText(_translate("MainWindow", "descriptografar"))
        self.pushButtonCript.setText(_translate("MainWindow", "criptografar"))
        self.comboBoxAlgoritmo.setItemText(0, _translate("MainWindow", "Cesar"))
        self.comboBoxAlgoritmo.setItemText(1, _translate("MainWindow", "XOR"))
        self.comboBoxAlgoritmo.setItemText(2, _translate("MainWindow", "S-DES"))
        self.comboBoxAlgoritmo.setItemText(3, _translate("MainWindow", "DES"))
        self.comboBoxAlgoritmo.setItemText(4, _translate("MainWindow", "AES"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
